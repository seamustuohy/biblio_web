# SystemD script for running the standalong server as a daemon
# Place this in /etc/systemd/system/biblio_web.servivce
# owned by root, mode 0644

[Unit]
Description=Biblio Web Service
Documentation=https://github.com/seamustuohy/biblio_web

After=network.target

[Service]
# Standalone server runs as the main job, default
Type=simple

EnvironmentFile=-{{ biblio_web_env_file }}
# The "-" on the EnvironmentFile= line ensures that no error messages is generated if the environment file does not exist. Since many of these files were optional in sysvinit, you should include the "-" when using this directive.

# Run under user recoll
User={{ biblio_web_service_user }}

# Set listen port and address as needed.
# %H is the current host name
ExecStart={{ biblio_web_venv_path }}/bin/gunicorn \
          -c {{ gunicorn_config_path }} \
          --chdir "{{ biblio_web_dir_path }}/biblio_web"

ExecStop=/bin/kill -SIGINT $MAINPID
KillMode=process

Restart=on-failure

; Use private /tmp and /var/tmp, which are discarded after service stops.
PrivateTmp={{ biblio_web_sec_private_tmp }}
; Use a minimal /dev
PrivateDevices={{ biblio_web_sec_private_devices }}
; Hide /home, /root, and /run/user. Nobody will steal your SSH-keys.
ProtectHome={{ biblio_web_sec_protect_home }}
; Make /usr, /boot, /etc and possibly some more folders read-only.
ProtectSystem={{ biblio_web_sec_protect_system }}
; Except the directories that we need to actually run this thing.
; This merely retains r/w access rights, it does not add any new. Must still be writable on the host! (So, make sure you have all the permissions set right!)
ReadWriteDirectories={{ biblio_dir_path }} {{ biblio_archive_dir_path }} {{ biblio_web_dir_path }} {{ biblio_base_dir_path }}

CapabilityBoundingSet={{ biblio_web_systemd_capabilities }}
AmbientCapabilities={{ biblio_web_systemd_capabilities }}
NoNewPrivileges=true

[Install]
WantedBy=multi-user.target
